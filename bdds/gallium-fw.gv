digraph mygraph {
	node [shape=box style=rounded border=0];
	subgraph clusterprocess {
		node [style="rounded,filled",color=black];
		72 [label="72:drop()", fillcolor="brown1"];
		73 [label="73:fwd(0)", fillcolor="chartreuse2"];
		74 [label="74:fwd(1)", fillcolor="chartreuse2"];
		41 [shape=Mdiamond, label="41:(0 != VIGOR_DEVICE)", fillcolor="yellow"];
		41 -> 73 [label="True"];
		41 -> 74 [label="False"];
		34 [shape=Mdiamond, label="34:!map_has_this_key__30", fillcolor="yellow"];
		34 -> 72 [label="True"];
		34 -> 41 [label="False"];
		33 [label="33:packet_return_chunk(\l  p:1074011104,\l  the_chunk:1073762768[packet_chunks])\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		33 -> 34;
		32 [label="32:packet_return_chunk(\l  p:1074011104,\l  the_chunk:1073762809[packet_chunks[41:60]])\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		32 -> 33;
		31 [label="31:packet_return_chunk(\l  p:1074011104,\l  the_chunk:1073762850[packet_chunks[82:85]])\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		31 -> 32;
		30 [label="30:map_get(\l  key:1074021760[(packet_chunks[50])++((VIGOR_DEVICE[1])++((VIGOR_DEVICE[0])++(packet_chunks[82:85]++packet_chunks[53:60])))],\l  map:1073907168,\l  value_out:1074023784[2880154539 -> allocated_index__30]) -> 1\l=>{map_has_this_key__30[1]}\l=>{allocated_index__30[allocated_index__30]}\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		30 -> 31;
		29 [label="29:packet_borrow_next_chunk(\l  chunk:1074023504[ -> 1073762850],\l  length:4,\l  p:1074011104)\l=>{packet_chunks[packet_chunks[82:85]]}\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}\l{!(!((6 == packet_chunks[50]) | (17 == packet_chunks[50])) | ((4294967262 + pkt_len) < 4))}", fillcolor="cornflowerblue"];
		29 -> 30;
		75 [label="75:drop()", fillcolor="brown1"];
		54 [label="54:packet_return_chunk(\l  p:1074011104,\l  the_chunk:1073762768[packet_chunks])\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		54 -> 75;
		53 [label="53:packet_return_chunk(\l  p:1074011104,\l  the_chunk:1073762809[packet_chunks[41:60]])\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		53 -> 54;
		27 [shape=Mdiamond, label="27:(((6 == packet_chunks[50]) | (17 == packet_chunks[50])) & ((4294967262 + pkt_len) >= 4))", fillcolor="yellow"];
		27 -> 29 [label="True"];
		27 -> 53 [label="False"];
		25 [label="25:packet_borrow_next_chunk(\l  chunk:1074022848[ -> 1073762809],\l  length:20,\l  p:1074011104)\l=>{packet_chunks[packet_chunks[41:60]]}\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		25 -> 27;
		76 [label="76:drop()", fillcolor="brown1"];
		60 [label="60:packet_return_chunk(\l  p:1074011104,\l  the_chunk:1073762768[packet_chunks])", fillcolor="cornflowerblue"];
		60 -> 76;
		23 [shape=Mdiamond, label="23:((8 == packet_chunks[12:13]) & (20 <= (4294967282 + pkt_len)))", fillcolor="yellow"];
		23 -> 25 [label="True"];
		23 -> 60 [label="False"];
		21 [label="21:packet_borrow_next_chunk(\l  chunk:1074022112[ -> 1073762768],\l  length:14,\l  p:1074011104)\l=>{packet_chunks[packet_chunks]}", fillcolor="cornflowerblue"];
		21 -> 23;
		12 [label="12:current_time() -> next_time__12\l=>{next_time__12[next_time__12]}", fillcolor="cornflowerblue"];
		12 -> 21;
	}
}