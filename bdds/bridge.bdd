===== VIGOR_BDD_SIG =====
;;-- kQuery --
array next_time__18[8] : w32 -> w8 = symbolic
array map_allocation_succeeded__1[4] : w32 -> w8 = symbolic
array packet_chunks[205] : w32 -> w8 = symbolic
array map_occupancy[4] : w32 -> w8 = symbolic
array backup_map_occupancy[4] : w32 -> w8 = symbolic
array number_of_freed_flows__28[4] : w32 -> w8 = symbolic
array vector_alloc_success__4[4] : w32 -> w8 = symbolic
array allocated_index__29[4] : w32 -> w8 = symbolic
array map_has_this_key__29[4] : w32 -> w8 = symbolic
array vector_alloc_success__7[4] : w32 -> w8 = symbolic
array new_index__32[4] : w32 -> w8 = symbolic
array out_of_space__32[4] : w32 -> w8 = symbolic
array allocated_index__131[4] : w32 -> w8 = symbolic
array is_dchain_allocated__10[4] : w32 -> w8 = symbolic
array vector_data_reset_1[16] : w32 -> w8 = symbolic
array vector_data_reset__35[48] : w32 -> w8 = symbolic
array allocated_index__85[4] : w32 -> w8 = symbolic
array map_has_this_key__131[4] : w32 -> w8 = symbolic
array vector_data_reset__36[16] : w32 -> w8 = symbolic
array map_has_this_key__85[4] : w32 -> w8 = symbolic
array vector_data_reset__147[16] : w32 -> w8 = symbolic
array vector_data_reset__101[16] : w32 -> w8 = symbolic
array VIGOR_DEVICE[4] : w32 -> w8 = symbolic
array allocated_index__40[4] : w32 -> w8 = symbolic
array map_has_this_key__40[4] : w32 -> w8 = symbolic
array vector_data_reset__56[16] : w32 -> w8 = symbolic
(query [] false [
       (w32 65536)
       (w64 94654201850752)
       (w64 94654201897712)
       (w64 1073904608)
       (w64 0)
       (w64 1073904936)
       (w32 1)
       (ReadLSB w64 (w32 0) next_time__18)
       (Eq false
     (Eq (w32 0)
         (ReadLSB w32 (w32 0) map_allocation_succeeded__1)))
       (w64 1074093944)
       (w64 1073761600)
       (w32 14)
       (w64 1074082400)
       (ReadLSB w112 (w32 0) packet_chunks)
       (Ult (ReadLSB w32 (w32 0) map_occupancy)
      (w32 65536))
       (Ult (ReadLSB w32 (w32 0) backup_map_occupancy)
      (w32 65536))
       (w32 65536)
       (w32 6)
       (w64 94654201850944)
       (w64 1073904616)
       (w64 0)
       (w64 1073918760)
       (w32 1)
       (w64 1073944032)
       (w64 1073904936)
       (Add w64 (w64 18446743973709551616)
          (ReadLSB w64 (w32 0) next_time__18))
       (w64 1073918760)
       (ReadLSB w32 (w32 0) number_of_freed_flows__28)
       (Eq false
     (Eq (w32 0)
         (ReadLSB w32 (w32 0) vector_alloc_success__4)))
       (w64 1073761606)
       (ReadLSB w48 (w32 6) packet_chunks)
       (ReadLSB w48 (w32 6) packet_chunks)
       (w32 1073904936)
       (w64 1074094608)
       (w32 4294967295)
       (ReadLSB w32 (w32 0) allocated_index__29)
       (w32 1)
       (w32 65536)
       (w32 2)
       (w64 94654201896944)
       (w64 1073904624)
       (w64 0)
       (w64 1073931472)
       (w32 1)
       (Eq (w32 0)
     (ReadLSB w32 (w32 0) map_has_this_key__29))
       (Eq false
     (Eq (w32 0)
         (ReadLSB w32 (w32 0) vector_alloc_success__7)))
       (w64 1073944032)
       (w64 1074094608)
       (w32 4294967295)
       (ReadLSB w32 (w32 0) new_index__32)
       (ReadLSB w64 (w32 0) next_time__18)
       (w32 1)
       (w64 1073944032)
       (ReadLSB w32 (w32 0) allocated_index__29)
       (ReadLSB w64 (w32 0) next_time__18)
       (w32 1)
       (w64 1073904632)
       (w64 1073944032)
       (w32 65536)
       (w32 1)
       (Eq false
     (Extract 0 (ZExt w8 (Eq false
                             (Eq (w32 0)
                                 (And w32 (ZExt w32 (Extract 0 (ZExt w8 (Eq false
                                                                            (Eq (w32 0)
                                                                                (ReadLSB w32 (w32 0) out_of_space__32))))))
                                          (ZExt w32 (Eq (w32 0)
                                                        (ReadLSB w32 (w32 0) number_of_freed_flows__28)))))))))
       (w64 1073761600)
       (ReadLSB w48 (w32 0) packet_chunks)
       (ReadLSB w48 (w32 0) packet_chunks)
       (w32 1073904936)
       (w64 1074108892)
       (w32 4294967295)
       (ReadLSB w32 (w32 0) allocated_index__131)
       (w32 1)
       (Eq false
     (Eq (w32 0)
         (ReadLSB w32 (w32 0) is_dchain_allocated__10)))
       (Eq false
     (Eq (w32 0)
         (And w32 (ZExt w32 (Sle (w32 0)
                                 (ZExt w32 (ReadLSB w16 (w32 0) vector_data_reset_1))))
                  (ZExt w32 (Slt (ZExt w32 (ReadLSB w16 (w32 0) vector_data_reset_1)) (w32 2))))))
       (ReadLSB w32 (w32 0) new_index__32)
       (w64 1074094672)
       (w64 1073931168)
       (w64 1073918760)
       (ReadLSB w48 (w32 0) vector_data_reset__35)
       (w64 1073761600)
       (ReadLSB w48 (w32 0) packet_chunks)
       (ReadLSB w48 (w32 0) packet_chunks)
       (w32 1073904936)
       (w64 1074102540)
       (w32 4294967295)
       (ReadLSB w32 (w32 0) allocated_index__85)
       (w32 1)
       (Eq (w32 0)
     (ReadLSB w32 (w32 0) map_has_this_key__131))
       (ReadLSB w32 (w32 0) new_index__32)
       (w64 1074094704)
       (w64 1073943880)
       (w64 1073931472)
       (ReadLSB w16 (w32 0) vector_data_reset__36)
       (Eq (w32 0)
     (ReadLSB w32 (w32 0) map_has_this_key__85))
       (w64 1074082400)
       (w64 1073761600)
       (ReadLSB w112 (w32 0) packet_chunks)
       (Eq false
     (Eq (w32 0)
         (And w32 (ZExt w32 (Sle (w32 0)
                                 (ZExt w32 (ReadLSB w16 (w32 0) vector_data_reset__147))))
                  (ZExt w32 (Slt (ZExt w32 (ReadLSB w16 (w32 0) vector_data_reset__147)) (w32 2))))))
       (ReadLSB w32 (w32 0) allocated_index__131)
       (w64 1074108960)
       (w64 1073943880)
       (w64 1073931472)
       (ReadLSB w16 (w32 0) vector_data_reset__147)
       (w64 1073931168)
       (ReadLSB w48 (w32 6) packet_chunks)
       (ReadLSB w48 (w32 6) packet_chunks)
       (w32 1073904936)
       (ReadLSB w32 (w32 0) new_index__32)
       (w64 1074082400)
       (w64 1073761600)
       (ReadLSB w112 (w32 0) packet_chunks)
       (Eq false
     (Eq (w32 0)
         (And w32 (ZExt w32 (Sle (w32 0)
                                 (ZExt w32 (ReadLSB w16 (w32 0) vector_data_reset__101))))
                  (ZExt w32 (Slt (ZExt w32 (ReadLSB w16 (w32 0) vector_data_reset__101)) (w32 2))))))
       (ReadLSB w32 (w32 0) allocated_index__85)
       (w64 1074102608)
       (w64 1073943880)
       (w64 1073931472)
       (ReadLSB w16 (w32 0) vector_data_reset__101)
       (Ne (w16 0)
     (ReadLSB w16 (w32 0) VIGOR_DEVICE))
       (ReadLSB w32 (w32 0) allocated_index__131)
       (w64 1073943880)
       (ReadLSB w16 (w32 0) vector_data_reset__147)
       (w64 1073931472)
       (ReadLSB w32 (w32 0) new_index__32)
       (w64 1073931168)
       (ReadLSB w48 (w32 6) packet_chunks)
       (w64 1073918760)
       (Ne (w16 0)
     (ReadLSB w16 (w32 0) VIGOR_DEVICE))
       (ReadLSB w32 (w32 0) allocated_index__85)
       (w64 1073943880)
       (ReadLSB w16 (w32 0) vector_data_reset__101)
       (w64 1073931472)
       (w64 1074082400)
       (w64 1073761600)
       (ReadLSB w112 (w32 0) packet_chunks)
       (ReadLSB w32 (w32 0) new_index__32)
       (w64 1073943880)
       (ReadLSB w16 (w32 0) VIGOR_DEVICE)
       (w64 1073931472)
       (w64 1074082400)
       (w64 1073761600)
       (ReadLSB w112 (w32 0) packet_chunks)
       (Ne (w16 0)
     (ReadLSB w16 (w32 0) VIGOR_DEVICE))
       (w64 1073761600)
       (ReadLSB w48 (w32 0) packet_chunks)
       (ReadLSB w48 (w32 0) packet_chunks)
       (w32 1073904936)
       (w64 1074096444)
       (w32 4294967295)
       (ReadLSB w32 (w32 0) allocated_index__40)
       (w32 1)
       (Ne (w16 0)
     (ReadLSB w16 (w32 0) VIGOR_DEVICE))
       (Eq false
     (Eq (Extract w16 0 (ZExt w32 (ReadLSB w16 (w32 0) vector_data_reset__147)))
         (ReadLSB w16 (w32 0) VIGOR_DEVICE)))
       (Eq false
     (Eq (w16 0)
         (Extract w16 0 (ZExt w32 (ReadLSB w16 (w32 0) vector_data_reset__147)))))
       (Eq (w32 0)
     (ReadLSB w32 (w32 0) map_has_this_key__40))
       (Eq false
     (Eq (Extract w16 0 (ZExt w32 (ReadLSB w16 (w32 0) vector_data_reset__101)))
         (ReadLSB w16 (w32 0) VIGOR_DEVICE)))
       (Eq false
     (Eq (w16 0)
         (Extract w16 0 (ZExt w32 (ReadLSB w16 (w32 0) vector_data_reset__101)))))
       (w64 1074082400)
       (w64 1073761600)
       (ReadLSB w112 (w32 0) packet_chunks)
       (Eq false
     (Eq (w32 0)
         (And w32 (ZExt w32 (Sle (w32 0)
                                 (ZExt w32 (ReadLSB w16 (w32 2) vector_data_reset__56))))
                  (ZExt w32 (Slt (ZExt w32 (ReadLSB w16 (w32 2) vector_data_reset__56)) (w32 2))))))
       (ReadLSB w32 (w32 0) allocated_index__40)
       (w64 1074096512)
       (w64 1073943882)
       (w64 1073931472)
       (ReadLSB w16 (w32 2) vector_data_reset__56)
       (Ne (w16 0)
     (ReadLSB w16 (w32 0) VIGOR_DEVICE))
       (ReadLSB w32 (w32 0) allocated_index__40)
       (w64 1073943882)
       (ReadLSB w16 (w32 2) vector_data_reset__56)
       (w64 1073931472)
       (w64 1074082400)
       (w64 1073761600)
       (ReadLSB w112 (w32 0) packet_chunks)
       (Ne (w16 0)
     (ReadLSB w16 (w32 0) VIGOR_DEVICE))
       (Eq false
     (Eq (Extract w16 0 (ZExt w32 (ReadLSB w16 (w32 2) vector_data_reset__56)))
         (ReadLSB w16 (w32 0) VIGOR_DEVICE)))
       (Eq false
     (Eq (w16 0)
         (Extract w16 0 (ZExt w32 (ReadLSB w16 (w32 2) vector_data_reset__56)))))
   ])
;; -- Nodes --
1:(0 CALL map_allocate(capacity:(w32 65536),keq:(w64 94654201850752)&rte_ether_addr_eq,khash:(w64 94654201897712)&rte_ether_addr_hash,map_out:(w64 1073904608)&[(w64 0)->(w64 1073904936)][])->(w32 1))
18:(0 CALL current_time()->(ReadLSB w64 (w32 0) next_time__18))
2:(0 BRANCH (Eq false
     (Eq (w32 0)
         (ReadLSB w32 (w32 0) map_allocation_succeeded__1))))
27:(0 CALL packet_borrow_next_chunk(chunk:(w64 1074093944)&[->(w64 1073761600)][],length:(w32 14),p:(w64 1074082400)){the_chunk:[->(ReadLSB w112 (w32 0) packet_chunks)]}->[])
4:(2 CALL vector_allocate(capacity:(w32 65536),elem_size:(w32 6),init_elem:(w64 94654201850944)&rte_ether_addr_allocate,vector_out:(w64 1073904616)&[(w64 0)->(w64 1073918760)][])->(w32 1))
184:(0 RETURN_INIT FAILURE)
28:(0 CALL expire_items_single_map(chain:(w64 1073944032),map:(w64 1073904936),time:(Add w64 (w64 18446743973709551616)
          (ReadLSB w64 (w32 0) next_time__18)),vector:(w64 1073918760))->(ReadLSB w32 (w32 0) number_of_freed_flows__28))
5:(0 BRANCH (Eq false
     (Eq (w32 0)
         (ReadLSB w32 (w32 0) vector_alloc_success__4))))
29:(0 CALL map_get(key:(w64 1073761606)&[(ReadLSB w48 (w32 6) packet_chunks)->(ReadLSB w48 (w32 6) packet_chunks)][{addr_bytes,0,48}],map:(w32 1073904936),value_out:(w64 1074094608)&[(w32 4294967295)->(ReadLSB w32 (w32 0) allocated_index__29)][])->(w32 1))
7:(0 CALL vector_allocate(capacity:(w32 65536),elem_size:(w32 2),init_elem:(w64 94654201896944)&DynamicValue_allocate,vector_out:(w64 1073904624)&[(w64 0)->(w64 1073931472)][])->(w32 1))
183:(0 RETURN_INIT FAILURE)
30:(0 BRANCH (Eq (w32 0)
     (ReadLSB w32 (w32 0) map_has_this_key__29)))
8:(0 BRANCH (Eq false
     (Eq (w32 0)
         (ReadLSB w32 (w32 0) vector_alloc_success__7))))
32:(0 CALL dchain_allocate_new_index(chain:(w64 1073944032),index_out:(w64 1074094608)&[(w32 4294967295)->(ReadLSB w32 (w32 0) new_index__32)][],time:(ReadLSB w64 (w32 0) next_time__18))->(w32 1))
130:(0 CALL dchain_rejuvenate_index(chain:(w64 1073944032),index:(ReadLSB w32 (w32 0) allocated_index__29),time:(ReadLSB w64 (w32 0) next_time__18))->(w32 1))
10:(0 CALL dchain_allocate(chain_out:(w64 1073904632)&[->(w64 1073944032)][],index_range:(w32 65536))->(w32 1))
182:(0 RETURN_INIT FAILURE)
33:(0 BRANCH (Eq false
     (Extract 0 (ZExt w8 (Eq false
                             (Eq (w32 0)
                                 (And w32 (ZExt w32 (Extract 0 (ZExt w8 (Eq false
                                                                            (Eq (w32 0)
                                                                                (ReadLSB w32 (w32 0) out_of_space__32))))))
                                          (ZExt w32 (Eq (w32 0)
                                                        (ReadLSB w32 (w32 0) number_of_freed_flows__28))))))))))
131:(0 CALL map_get(key:(w64 1073761600)&[(ReadLSB w48 (w32 0) packet_chunks)->(ReadLSB w48 (w32 0) packet_chunks)][{addr_bytes,0,48}],map:(w32 1073904936),value_out:(w64 1074108892)&[(w32 4294967295)->(ReadLSB w32 (w32 0) allocated_index__131)][])->(w32 1))
11:(0 BRANCH (Eq false
     (Eq (w32 0)
         (ReadLSB w32 (w32 0) is_dchain_allocated__10))))
35:(1 CALL vector_borrow(index:(ReadLSB w32 (w32 0) new_index__32),val_out:(w64 1074094672)&[->(w64 1073931168)][],vector:(w64 1073918760)){borrowed_cell:[->(ReadLSB w48 (w32 0) vector_data_reset__35)]}->[])
85:(0 CALL map_get(key:(w64 1073761600)&[(ReadLSB w48 (w32 0) packet_chunks)->(ReadLSB w48 (w32 0) packet_chunks)][{addr_bytes,0,48}],map:(w32 1073904936),value_out:(w64 1074102540)&[(w32 4294967295)->(ReadLSB w32 (w32 0) allocated_index__85)][])->(w32 1))
132:(0 BRANCH (Eq (w32 0)
     (ReadLSB w32 (w32 0) map_has_this_key__131)))
180:(0 RETURN_INIT SUCCESS)
181:(0 RETURN_INIT FAILURE)
36:(0 CALL vector_borrow(index:(ReadLSB w32 (w32 0) new_index__32),val_out:(w64 1074094704)&[->(w64 1073943880)][],vector:(w64 1073931472)){borrowed_cell:[->(ReadLSB w16 (w32 0) vector_data_reset__36)]}->[])
86:(0 BRANCH (Eq (w32 0)
     (ReadLSB w32 (w32 0) map_has_this_key__85)))
134:(0 CALL packet_return_chunk(p:(w64 1074082400),the_chunk:(w64 1073761600)&[(ReadLSB w112 (w32 0) packet_chunks)->][{d_addr,0,48},{s_addr,48,48},{ether_type,96,16}])->[])
147:(1 CALL vector_borrow(index:(ReadLSB w32 (w32 0) allocated_index__131),val_out:(w64 1074108960)&[->(w64 1073943880)][],vector:(w64 1073931472)){borrowed_cell:[->(ReadLSB w16 (w32 0) vector_data_reset__147)]}->[])
37:(0 CALL map_put(key:(w64 1073931168)&[(ReadLSB w48 (w32 6) packet_chunks)->(ReadLSB w48 (w32 6) packet_chunks)][{addr_bytes,0,48}],map:(w32 1073904936),value:(ReadLSB w32 (w32 0) new_index__32))->[])
88:(0 CALL packet_return_chunk(p:(w64 1074082400),the_chunk:(w64 1073761600)&[(ReadLSB w112 (w32 0) packet_chunks)->][{d_addr,0,48},{s_addr,48,48},{ether_type,96,16}])->[])
101:(1 CALL vector_borrow(index:(ReadLSB w32 (w32 0) allocated_index__85),val_out:(w64 1074102608)&[->(w64 1073943880)][],vector:(w64 1073931472)){borrowed_cell:[->(ReadLSB w16 (w32 0) vector_data_reset__101)]}->[])
135:(0 BRANCH (Ne (w16 0)
     (ReadLSB w16 (w32 0) VIGOR_DEVICE)))
148:(0 CALL vector_return(index:(ReadLSB w32 (w32 0) allocated_index__131),value:(w64 1073943880)&[(ReadLSB w16 (w32 0) vector_data_reset__147)->][{device,0,16}],vector:(w64 1073931472))->[])
38:(0 CALL vector_return(index:(ReadLSB w32 (w32 0) new_index__32),value:(w64 1073931168)&[(ReadLSB w48 (w32 6) packet_chunks)->][{addr_bytes,0,48}],vector:(w64 1073918760))->[])
89:(0 BRANCH (Ne (w16 0)
     (ReadLSB w16 (w32 0) VIGOR_DEVICE)))
102:(0 CALL vector_return(index:(ReadLSB w32 (w32 0) allocated_index__85),value:(w64 1073943880)&[(ReadLSB w16 (w32 0) vector_data_reset__101)->][{device,0,16}],vector:(w64 1073931472))->[])
198:(0 RETURN_PROCESS FWD 0)
199:(0 RETURN_PROCESS FWD 1)
149:(0 CALL packet_return_chunk(p:(w64 1074082400),the_chunk:(w64 1073761600)&[(ReadLSB w112 (w32 0) packet_chunks)->][{d_addr,0,48},{s_addr,48,48},{ether_type,96,16}])->[])
39:(0 CALL vector_return(index:(ReadLSB w32 (w32 0) new_index__32),value:(w64 1073943880)&[(ReadLSB w16 (w32 0) VIGOR_DEVICE)->][{device,0,16}],vector:(w64 1073931472))->[])
192:(0 RETURN_PROCESS FWD 0)
193:(0 RETURN_PROCESS FWD 1)
103:(0 CALL packet_return_chunk(p:(w64 1074082400),the_chunk:(w64 1073761600)&[(ReadLSB w112 (w32 0) packet_chunks)->][{d_addr,0,48},{s_addr,48,48},{ether_type,96,16}])->[])
150:(0 BRANCH (Ne (w16 0)
     (ReadLSB w16 (w32 0) VIGOR_DEVICE)))
40:(0 CALL map_get(key:(w64 1073761600)&[(ReadLSB w48 (w32 0) packet_chunks)->(ReadLSB w48 (w32 0) packet_chunks)][{addr_bytes,0,48}],map:(w32 1073904936),value_out:(w64 1074096444)&[(w32 4294967295)->(ReadLSB w32 (w32 0) allocated_index__40)][])->(w32 1))
104:(0 BRANCH (Ne (w16 0)
     (ReadLSB w16 (w32 0) VIGOR_DEVICE)))
152:(0 BRANCH (Eq false
     (Eq (Extract w16 0 (ZExt w32 (ReadLSB w16 (w32 0) vector_data_reset__147)))
         (ReadLSB w16 (w32 0) VIGOR_DEVICE))))
164:(0 BRANCH (Eq false
     (Eq (w16 0)
         (Extract w16 0 (ZExt w32 (ReadLSB w16 (w32 0) vector_data_reset__147))))))
41:(0 BRANCH (Eq (w32 0)
     (ReadLSB w32 (w32 0) map_has_this_key__40)))
106:(0 BRANCH (Eq false
     (Eq (Extract w16 0 (ZExt w32 (ReadLSB w16 (w32 0) vector_data_reset__101)))
         (ReadLSB w16 (w32 0) VIGOR_DEVICE))))
118:(0 BRANCH (Eq false
     (Eq (w16 0)
         (Extract w16 0 (ZExt w32 (ReadLSB w16 (w32 0) vector_data_reset__101))))))
200:(0 RETURN_PROCESS FWD 0)
201:(0 RETURN_PROCESS DROP 1)
202:(0 RETURN_PROCESS FWD 1)
203:(0 RETURN_PROCESS DROP 0)
43:(0 CALL packet_return_chunk(p:(w64 1074082400),the_chunk:(w64 1073761600)&[(ReadLSB w112 (w32 0) packet_chunks)->][{d_addr,0,48},{s_addr,48,48},{ether_type,96,16}])->[])
56:(1 CALL vector_borrow(index:(ReadLSB w32 (w32 0) allocated_index__40),val_out:(w64 1074096512)&[->(w64 1073943882)][],vector:(w64 1073931472)){borrowed_cell:[->(ReadLSB w16 (w32 2) vector_data_reset__56)]}->[])
194:(0 RETURN_PROCESS FWD 0)
195:(0 RETURN_PROCESS DROP 1)
196:(0 RETURN_PROCESS FWD 1)
197:(0 RETURN_PROCESS DROP 0)
44:(0 BRANCH (Ne (w16 0)
     (ReadLSB w16 (w32 0) VIGOR_DEVICE)))
57:(0 CALL vector_return(index:(ReadLSB w32 (w32 0) allocated_index__40),value:(w64 1073943882)&[(ReadLSB w16 (w32 2) vector_data_reset__56)->][{device,0,16}],vector:(w64 1073931472))->[])
186:(0 RETURN_PROCESS FWD 0)
187:(0 RETURN_PROCESS FWD 1)
58:(0 CALL packet_return_chunk(p:(w64 1074082400),the_chunk:(w64 1073761600)&[(ReadLSB w112 (w32 0) packet_chunks)->][{d_addr,0,48},{s_addr,48,48},{ether_type,96,16}])->[])
59:(0 BRANCH (Ne (w16 0)
     (ReadLSB w16 (w32 0) VIGOR_DEVICE)))
61:(0 BRANCH (Eq false
     (Eq (Extract w16 0 (ZExt w32 (ReadLSB w16 (w32 2) vector_data_reset__56)))
         (ReadLSB w16 (w32 0) VIGOR_DEVICE))))
73:(0 BRANCH (Eq false
     (Eq (w16 0)
         (Extract w16 0 (ZExt w32 (ReadLSB w16 (w32 2) vector_data_reset__56))))))
188:(0 RETURN_PROCESS FWD 0)
189:(0 RETURN_PROCESS DROP 1)
190:(0 RETURN_PROCESS FWD 1)
191:(0 RETURN_PROCESS DROP 0)
;; -- Edges --
(1->2)
(18->27)
(2->4->184)
(27->28)
(4->5)
(28->29)
(5->7->183)
(29->30)
(7->8)
(30->32->130)
(8->10->182)
(32->33)
(130->131)
(10->11)
(33->35->85)
(131->132)
(11->180->181)
(35->36)
(85->86)
(132->134->147)
(36->37)
(86->88->101)
(134->135)
(147->148)
(37->38)
(88->89)
(101->102)
(135->198->199)
(148->149)
(38->39)
(89->192->193)
(102->103)
(149->150)
(39->40)
(103->104)
(150->152->164)
(40->41)
(104->106->118)
(152->200->201)
(164->202->203)
(41->43->56)
(106->194->195)
(118->196->197)
(43->44)
(56->57)
(44->186->187)
(57->58)
(58->59)
(59->61->73)
(61->188->189)
(73->190->191)
;; -- Roots --
init:1
process:18
