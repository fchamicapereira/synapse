digraph mygraph {
	node [shape=box style=rounded border=0];
	subgraph clusterprocess {
		node [style="rounded,filled",color=black];
		123 [label="123:fwd(0)", fillcolor="chartreuse2"];
		36 [label="36:packet_return_chunk(\l  p:1074045504,\l  the_chunk:1073757888[packet_chunks])\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		36 -> 123;
		35 [label="35:packet_return_chunk(\l  p:1074045504,\l  the_chunk:1073757929[packet_chunks[41:60]])\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		35 -> 36;
		124 [label="124:fwd(1)", fillcolor="chartreuse2"];
		54 [label="54:packet_return_chunk(\l  p:1074062128,\l  the_chunk:1073757888[packet_chunks])\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		54 -> 124;
		53 [label="53:packet_return_chunk(\l  p:1074062128,\l  the_chunk:1073757929[packet_chunks[41:60]])\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		53 -> 54;
		52 [label="52:vector_return(\l  index:new_index__45,\l  value:1073948736[(next_time__18[7])++((next_time__18[6])++((next_time__18[5])++((next_time__18[4])++((next_time__18[3])++((next_time__18[2])++((next_time__18[1])++((next_time__18[0])++((10000000000 - pkt_len)))))))))],\l  vector:1073936328)\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		52 -> 53;
		51 [label="51:vector_return(\l  index:new_index__45,\l  value:1073935672[packet_chunks[57:60]],\l  vector:1073923264)\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		51 -> 52;
		50 [label="50:map_put(\l  key:1073935672[packet_chunks[57:60]],\l  map:1073909440,\l  value:new_index__45)\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		50 -> 51;
		49 [label="49:vector_borrow(\l  index:new_index__45,\l  val_out:1074075240[ -> 1073948736],\l  vector:1073936328)\l=>{vector_data_reset__49[vector_data_reset__49]}\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		49 -> 50;
		48 [label="48:vector_borrow(\l  index:new_index__45,\l  val_out:1074075208[ -> 1073935672],\l  vector:1073923264)\l=>{vector_data_reset__48[vector_data_reset__48]}\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}\l{(((0 <= vector_data_reset_1[8:15]) & (vector_data_reset_1[8:15] <= next_time__18)) & (vector_data_reset_1 <= 10000000000))}", fillcolor="cornflowerblue"];
		48 -> 49;
		125 [label="125:drop()", fillcolor="brown1"];
		61 [label="61:packet_return_chunk(\l  p:1074062128,\l  the_chunk:1073757888[packet_chunks])\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		61 -> 125;
		60 [label="60:packet_return_chunk(\l  p:1074062128,\l  the_chunk:1073757929[packet_chunks[41:60]])\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		60 -> 61;
		46 [shape=Mdiamond, label="46:!(out_of_space__45 & !number_of_freed_flows__32)", fillcolor="yellow"];
		46 -> 48 [label="True"];
		46 -> 60 [label="False"];
		45 [label="45:dchain_allocate_new_index(\l  chain:1073935840,\l  index_out:1074075008[4294967295 -> new_index__45],\l  time:next_time__18) -> 1\l=>{out_of_space__45[1]}\l=>{new_index__45[new_index__45]}\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		45 -> 46;
		126 [label="126:drop()", fillcolor="brown1"];
		77 [label="77:packet_return_chunk(\l  p:1074062128,\l  the_chunk:1073757888[packet_chunks])\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		77 -> 126;
		76 [label="76:packet_return_chunk(\l  p:1074062128,\l  the_chunk:1073757929[packet_chunks[41:60]])\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		76 -> 77;
		75 [label="75:vector_return(\l  index:allocated_index__42,\l  value:1073948736[(next_time__18[7])++((next_time__18[6])++((next_time__18[5])++((next_time__18[4])++((next_time__18[3])++((next_time__18[2])++((next_time__18[1])++((next_time__18[0])++((vector_data_reset__68 + ((1000000000 * (next_time__18 - vector_data_reset__68[8:15])) / 1000000000))))))))))],\l  vector:1073936328)\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}\l{(0 <= ((1000000000 * (next_time__18 - vector_data_reset__68[8:15])) / 1000000000))}", fillcolor="cornflowerblue"];
		75 -> 76;
		127 [label="127:fwd(1)", fillcolor="chartreuse2"];
		85 [label="85:packet_return_chunk(\l  p:1074062128,\l  the_chunk:1073757888[packet_chunks])\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		85 -> 127;
		84 [label="84:packet_return_chunk(\l  p:1074062128,\l  the_chunk:1073757929[packet_chunks[41:60]])\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		84 -> 85;
		83 [label="83:vector_return(\l  index:allocated_index__42,\l  value:1073948736[(next_time__18[7])++((next_time__18[6])++((next_time__18[5])++((next_time__18[4])++((next_time__18[3])++((next_time__18[2])++((next_time__18[1])++((next_time__18[0])++(((vector_data_reset__68 + ((1000000000 * (next_time__18 - vector_data_reset__68[8:15])) / 1000000000)) - pkt_len)))))))))],\l  vector:1073936328)\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}\l{(0 <= ((1000000000 * (next_time__18 - vector_data_reset__68[8:15])) / 1000000000))}", fillcolor="cornflowerblue"];
		83 -> 84;
		73 [shape=Mdiamond, label="73:((vector_data_reset__68 + ((1000000000 * (next_time__18 - vector_data_reset__68[8:15])) / 1000000000)) <= pkt_len)", fillcolor="yellow"];
		73 -> 75 [label="True"];
		73 -> 83 [label="False"];
		128 [label="128:fwd(1)", fillcolor="chartreuse2"];
		93 [label="93:packet_return_chunk(\l  p:1074062128,\l  the_chunk:1073757888[packet_chunks])\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		93 -> 128;
		92 [label="92:packet_return_chunk(\l  p:1074062128,\l  the_chunk:1073757929[packet_chunks[41:60]])\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		92 -> 93;
		91 [label="91:vector_return(\l  index:allocated_index__42,\l  value:1073948736[(next_time__18[7])++((next_time__18[6])++((next_time__18[5])++((next_time__18[4])++((next_time__18[3])++((next_time__18[2])++((next_time__18[1])++((next_time__18[0])++((10000000000 - pkt_len)))))))))],\l  vector:1073936328)\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}\l{(0 <= ((1000000000 * (next_time__18 - vector_data_reset__68[8:15])) / 1000000000))}", fillcolor="cornflowerblue"];
		91 -> 92;
		71 [shape=Mdiamond, label="71:((vector_data_reset__68 + ((1000000000 * (next_time__18 - vector_data_reset__68[8:15])) / 1000000000)) <= 10000000000)", fillcolor="yellow"];
		71 -> 73 [label="True"];
		71 -> 91 [label="False"];
		129 [label="129:fwd(1)", fillcolor="chartreuse2"];
		101 [label="101:packet_return_chunk(\l  p:1074062128,\l  the_chunk:1073757888[packet_chunks])\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		101 -> 129;
		100 [label="100:packet_return_chunk(\l  p:1074062128,\l  the_chunk:1073757929[packet_chunks[41:60]])\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		100 -> 101;
		99 [label="99:vector_return(\l  index:allocated_index__42,\l  value:1073948736[(next_time__18[7])++((next_time__18[6])++((next_time__18[5])++((next_time__18[4])++((next_time__18[3])++((next_time__18[2])++((next_time__18[1])++((next_time__18[0])++((10000000000 - pkt_len)))))))))],\l  vector:1073936328)\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		99 -> 100;
		69 [shape=Mdiamond, label="69:((next_time__18 - vector_data_reset__68[8:15]) < 10000000000)", fillcolor="yellow"];
		69 -> 71 [label="True"];
		69 -> 99 [label="False"];
		68 [label="68:vector_borrow(\l  index:allocated_index__42,\l  val_out:1074075056[ -> 1073948736],\l  vector:1073936328)\l=>{vector_data_reset__68[vector_data_reset__68]}\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		68 -> 69;
		67 [label="67:dchain_rejuvenate_index(\l  chain:1073935840,\l  index:allocated_index__42,\l  time:next_time__18) -> 1\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}\l{(((0 <= vector_data_reset_1[8:15]) & (vector_data_reset_1[8:15] <= next_time__18)) & (vector_data_reset_1 <= 10000000000))}", fillcolor="cornflowerblue"];
		67 -> 68;
		43 [shape=Mdiamond, label="43:!map_has_this_key__42", fillcolor="yellow"];
		43 -> 45 [label="True"];
		43 -> 67 [label="False"];
		42 [label="42:map_get(\l  key:1074074948[packet_chunks[57:60]],\l  map:1073909440,\l  value_out:1074075008[4294967295 -> allocated_index__42]) -> 1\l=>{map_has_this_key__42[1]}\l=>{allocated_index__42[allocated_index__42]}\l{((VIGOR_DEVICE[3])++((VIGOR_DEVICE[2])++(0)) < 2)}\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		42 -> 43;
		33 [shape=Mdiamond, label="33:(0 != VIGOR_DEVICE)", fillcolor="yellow"];
		33 -> 35 [label="True"];
		33 -> 42 [label="False"];
		32 [label="32:expire_items_single_map(\l  chain:1073935840,\l  map:1073909440,\l  time:(18446744063709551616 + next_time__18),\l  vector:1073923264) -> number_of_freed_flows__32\l=>{number_of_freed_flows__32[number_of_freed_flows__32]}\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		32 -> 33;
		31 [label="31:packet_borrow_next_chunk(\l  chunk:1074057720[ -> 1073757929],\l  length:20,\l  p:1074045504)\l=>{packet_chunks[packet_chunks[41:60]]}\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}\l{(0 <= number_of_freed_flows)}", fillcolor="cornflowerblue"];
		31 -> 32;
		130 [label="130:drop()", fillcolor="brown1"];
		107 [label="107:packet_return_chunk(\l  p:1074045504,\l  the_chunk:1073757888[packet_chunks])", fillcolor="cornflowerblue"];
		107 -> 130;
		29 [shape=Mdiamond, label="29:((8 == packet_chunks[12:13]) & (20 <= (4294967282 + pkt_len)))", fillcolor="yellow"];
		29 -> 31 [label="True"];
		29 -> 107 [label="False"];
		27 [label="27:packet_borrow_next_chunk(\l  chunk:1074056984[ -> 1073757888],\l  length:14,\l  p:1074045504)\l=>{packet_chunks[packet_chunks]}", fillcolor="cornflowerblue"];
		27 -> 29;
		18 [label="18:current_time() -> next_time__18\l=>{next_time__18[next_time__18]}", fillcolor="cornflowerblue"];
		18 -> 27;
	}
}