digraph mygraph {
	node [shape=box style=rounded border=0];
	subgraph clusterprocess {
		node [style="rounded,filled",color=black];
		86 [label="86:drop()", fillcolor="brown1"];
		40 [label="40:packet_return_chunk(\l  p:1074026400,\l  the_chunk:1073760752[packet_chunks])\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		40 -> 86;
		39 [label="39:packet_return_chunk(\l  p:1074026400,\l  the_chunk:1073760793[packet_chunks[41:60]])\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		39 -> 40;
		38 [label="38:packet_return_chunk(\l  p:1074026400,\l  the_chunk:1073760834[packet_chunks[82:85]])\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		38 -> 39;
		87 [label="87:fwd(0)", fillcolor="chartreuse2"];
		51 [label="51:packet_return_chunk(\l  p:1074026400,\l  the_chunk:1073760752[packet_chunks])\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		51 -> 87;
		50 [label="50:packet_return_chunk(\l  p:1074026400,\l  the_chunk:1073760793[(vector_data_reset__46[3])++((vector_data_reset__46[2])++((vector_data_reset__46[1])++((vector_data_reset__46[0])++((packet_chunks[56])++((packet_chunks[55])++((packet_chunks[54])++((packet_chunks[53])++((checksum__48[1])++((checksum__48[0])++(packet_chunks[41:50]))))))))))])\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		50 -> 51;
		49 [label="49:packet_return_chunk(\l  p:1074026400,\l  the_chunk:1073760834[(vector_data_reset__46[5])++((vector_data_reset__46[4])++(packet_chunks[82:83]))])\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		49 -> 50;
		48 [label="48:nf_set_rte_ipv4_udptcp_checksum(\l  ip_header:1073760793,\l  l4_header:1073760834,\l  packet:1073907920)\l=>{checksum__48}\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		48 -> 49;
		47 [label="47:vector_return(\l  index:allocated_index__35,\l  value:1073947272[vector_data_reset__46],\l  vector:1073934864)\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		47 -> 48;
		46 [label="46:vector_borrow(\l  index:allocated_index__35,\l  val_out:1074039384[ -> 1073947272],\l  vector:1073934864)\l=>{vector_data_reset__46[vector_data_reset__46]}\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		46 -> 47;
		36 [shape=Mdiamond, label="36:!map_has_this_key__35", fillcolor="yellow"];
		36 -> 38 [label="True"];
		36 -> 46 [label="False"];
		35 [label="35:map_get(\l  key:1074039324[packet_chunks[84:85]],\l  map:1073908360,\l  value_out:1074039340[2880154539 -> allocated_index__35]) -> 1\l=>{map_has_this_key__35[1]}\l=>{allocated_index__35[allocated_index__35]}\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		35 -> 36;
		88 [label="88:fwd(1)", fillcolor="chartreuse2"];
		59 [label="59:packet_return_chunk(\l  p:1074046288,\l  the_chunk:1073760752[packet_chunks])\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		59 -> 88;
		58 [label="58:packet_return_chunk(\l  p:1074046288,\l  the_chunk:1073760793[packet_chunks[41:60]])\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		58 -> 59;
		57 [label="57:packet_return_chunk(\l  p:1074046288,\l  the_chunk:1073760834[packet_chunks[82:85]])\l{((VIGOR_DEVICE[3])++((VIGOR_DEVICE[2])++(0)) < 2)}\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		57 -> 58;
		33 [shape=Mdiamond, label="33:(0 != VIGOR_DEVICE)", fillcolor="yellow"];
		33 -> 35 [label="True"];
		33 -> 57 [label="False"];
		32 [label="32:packet_borrow_next_chunk(\l  chunk:1074038984[ -> 1073760834],\l  length:4,\l  p:1074026400)\l=>{packet_chunks[packet_chunks[82:85]]}\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}\l{!(!((6 == packet_chunks[50]) | (17 == packet_chunks[50])) | ((4294967262 + pkt_len) < 4))}", fillcolor="cornflowerblue"];
		32 -> 33;
		89 [label="89:drop()", fillcolor="brown1"];
		66 [label="66:packet_return_chunk(\l  p:1074026400,\l  the_chunk:1073760752[packet_chunks])\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		66 -> 89;
		65 [label="65:packet_return_chunk(\l  p:1074026400,\l  the_chunk:1073760793[packet_chunks[41:60]])\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		65 -> 66;
		30 [shape=Mdiamond, label="30:(((6 == packet_chunks[50]) | (17 == packet_chunks[50])) & ((4294967262 + pkt_len) >= 4))", fillcolor="yellow"];
		30 -> 32 [label="True"];
		30 -> 65 [label="False"];
		28 [label="28:packet_borrow_next_chunk(\l  chunk:1074038328[ -> 1073760793],\l  length:20,\l  p:1074026400)\l=>{packet_chunks[packet_chunks[41:60]]}\l{!(!(8 == packet_chunks[12:13]) | ((4294967282 + pkt_len) < 20))}", fillcolor="cornflowerblue"];
		28 -> 30;
		90 [label="90:drop()", fillcolor="brown1"];
		72 [label="72:packet_return_chunk(\l  p:1074026400,\l  the_chunk:1073760752[packet_chunks])", fillcolor="cornflowerblue"];
		72 -> 90;
		26 [shape=Mdiamond, label="26:((8 == packet_chunks[12:13]) & (20 <= (4294967282 + pkt_len)))", fillcolor="yellow"];
		26 -> 28 [label="True"];
		26 -> 72 [label="False"];
		24 [label="24:packet_borrow_next_chunk(\l  chunk:1074037592[ -> 1073760752],\l  length:14,\l  p:1074026400)\l=>{packet_chunks[packet_chunks]}", fillcolor="cornflowerblue"];
		24 -> 26;
		15 [label="15:current_time() -> next_time__15\l=>{next_time__15[next_time__15]}", fillcolor="cornflowerblue"];
		15 -> 24;
	}
}